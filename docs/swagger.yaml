definitions:
  handler.Response:
    properties:
      data: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
  model.Project:
    properties:
      description:
        type: string
      finishDate:
        type: string
      id:
        type: string
      manager:
        type: string
      name:
        type: string
      startDate:
        type: string
    type: object
  model.ProjectInputResponse:
    properties:
      description:
        type: string
      finishDate:
        type: string
      manager:
        type: string
      name:
        type: string
      startDate:
        type: string
    type: object
  model.Task:
    properties:
      created_at:
        type: string
      description:
        type: string
      finished_at:
        type: string
      id:
        type: string
      name:
        type: string
      priority:
        type: string
      project:
        type: string
      responsible_person:
        type: string
      state:
        type: string
    type: object
  model.TaskInputResponse:
    properties:
      created_at:
        type: string
      description:
        type: string
      finished_at:
        type: string
      name:
        type: string
      priority:
        type: string
      project:
        type: string
      responsible_person:
        type: string
      state:
        type: string
    type: object
  model.User:
    properties:
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      registration_date:
        type: string
      role:
        type: string
    type: object
  model.UserInputResponse:
    properties:
      email:
        type: string
      full_name:
        type: string
      registration_date:
        type: string
      role:
        type: string
    type: object
info:
  contact: {}
paths:
  /projects:
    get:
      consumes:
      - application/json
      description: Get all projects from the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Project'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Get Projects
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: Create a new project in the system
      parameters:
      - description: Project info
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/model.ProjectInputResponse'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Create Project
      tags:
      - projects
  /projects/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a project from the system by its ID
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Delete Project
      tags:
      - projects
    get:
      consumes:
      - application/json
      description: Retrieve a project from the system by its ID
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Get Project by ID
      tags:
      - projects
    put:
      consumes:
      - application/json
      description: Update the details of an existing project identified by its ID
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      - description: Project info
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/model.ProjectInputResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Update Project
      tags:
      - projects
  /projects/{id}/tasks:
    get:
      consumes:
      - application/json
      description: Retrieve all tasks associated with a project identified by its
        ID
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Task'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Get Tasks for Project
      tags:
      - tasks
  /projects/search:
    get:
      consumes:
      - application/json
      description: Search for projects by title or manager. Returns a list of projects
        that match the search criteria.
      parameters:
      - description: Project Title
        in: query
        name: title
        type: string
      - description: Project Manager
        in: query
        name: manager
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Project'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Search Projects
      tags:
      - projects
  /tasks:
    get:
      consumes:
      - application/json
      description: Get all tasks from the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Task'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Get Tasks
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Create a new task in the system
      parameters:
      - description: Task info
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.TaskInputResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Create Task
      tags:
      - tasks
  /tasks/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a task from the system by its ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Delete Task
      tags:
      - tasks
    get:
      consumes:
      - application/json
      description: Get a task from the system by its ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Task'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Get Task by ID
      tags:
      - tasks
    put:
      consumes:
      - application/json
      description: Update a task's details by its ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Task info
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.TaskInputResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Update Task
      tags:
      - tasks
  /tasks/search:
    get:
      consumes:
      - application/json
      description: Search for tasks in the system by title, status, priority, assignee,
        or project
      parameters:
      - description: Task Title
        in: query
        name: title
        type: string
      - description: Task Status
        in: query
        name: status
        type: string
      - description: Task Priority
        in: query
        name: priority
        type: string
      - description: Task Assignee
        in: query
        name: assignee
        type: string
      - description: Task Project
        in: query
        name: project
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Task'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Search Tasks
      tags:
      - tasks
  /users:
    get:
      consumes:
      - application/json
      description: Get all users from the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Get User
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user in the system
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserInputResponse'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Create User
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user from the system by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Delete User
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get a user from the system by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Get User by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user's details by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserInputResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Update User
      tags:
      - users
  /users/{id}/tasks:
    get:
      consumes:
      - application/json
      description: Get all tasks assigned to a specific user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Task'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Get Tasks for User
      tags:
      - users
      - tasks
  /users/search:
    get:
      consumes:
      - application/json
      description: Search for a user in the system by their name or email
      parameters:
      - description: Username
        in: query
        name: name
        type: string
      - description: User Email
        in: query
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Search User
      tags:
      - users
swagger: "2.0"
